For this week's blog, I will explain how to destory infrastructure through terraform, using the command destroy. We know that unmanaged infrastructure and ec2 instances can be dangerous, as
your instance may be compromised, or it can accumulate thousands of dollars of bills you must pay. The process is simple, as long as you already had terraform set up,
along with an AWS account and the AWS CLI installed. On your terminal, enter destroy, so it shows this: $ terraform destroy. Your output should display the following


<code>$ terraform destroy
An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_instance.app_server will be destroyed
  - resource "aws_instance" "app_server" {
      - ami                          = "ami-08d70e59c07c61a3a" -> null
      - arn                          = "arn:aws:ec2:us-west-2:561656980159:instance/i-0fd4a35969bd21710" -> null
##...

Plan: 0 to add, 0 to change, 1 to destroy.

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value:</code>
  
  Answer yes to execute the plan above.
Following your response, the output should be this:

 <code> Enter a value: yes

aws_instance.app_server: Destroying... [id=i-0fd4a35969bd21710]
aws_instance.app_server: Still destroying... [id=i-0fd4a35969bd21710, 10s elapsed]
aws_instance.app_server: Still destroying... [id=i-0fd4a35969bd21710, 20s elapsed]
aws_instance.app_server: Still destroying... [id=i-0fd4a35969bd21710, 30s elapsed]
aws_instance.app_server: Destruction complete after 31s

Destroy complete! Resources: 1 destroyed.</code>
  
  
  
